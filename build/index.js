"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = require("axios");
const actionsCore = require("@actions/core");
const slackUrl = actionsCore.getInput('slackWebHook');
const inputMessage = actionsCore.getInput('message');
const data = { text: inputMessage };
const sendToSlack = async (url, messageBody) => {
    try {
        const response = await axios_1.default.post(url, JSON.stringify(messageBody), {
            headers: { 'Content-Type': 'application/json' },
        });
        actionsCore.setOutput('response', JSON.stringify(response));
        return { statusCode: response.status, statusMessage: response.statusText };
    }
    catch (error) {
        const slackError = error;
        actionsCore.setOutput('response', JSON.stringify(slackError));
        return {
            statusCode: slackError.response.status,
            statusMessage: slackError.response.statusText,
        };
    }
};
(async () => {
    await sendToSlack(slackUrl, data);
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBMEI7QUFDMUIsNkNBQThDO0FBYTlDLE1BQU0sUUFBUSxHQUFHLFdBQVcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDdEQsTUFBTSxZQUFZLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNyRCxNQUFNLElBQUksR0FBcUIsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLENBQUM7QUFFdEQsTUFBTSxXQUFXLEdBQUcsS0FBSyxFQUFFLEdBQVcsRUFBRSxXQUE2QixFQUFFLEVBQUU7SUFDdkUsSUFBSTtRQUNGLE1BQU0sUUFBUSxHQUFHLE1BQU0sZUFBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUNsRSxPQUFPLEVBQUUsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLEVBQUU7U0FDaEQsQ0FBQyxDQUFDO1FBQ0gsV0FBVyxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQzVELE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBRSxhQUFhLEVBQUUsUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO0tBQzVFO0lBQUMsT0FBTyxLQUFLLEVBQUU7UUFDZCxNQUFNLFVBQVUsR0FBRyxLQUEyQixDQUFDO1FBQy9DLFdBQVcsQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztRQUM5RCxPQUFPO1lBQ0wsVUFBVSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTTtZQUN0QyxhQUFhLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxVQUFVO1NBQzlDLENBQUM7S0FDSDtBQUNILENBQUMsQ0FBQztBQUVGLENBQUMsS0FBSyxJQUFJLEVBQUU7SUFDVixNQUFNLFdBQVcsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDcEMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgYWN0aW9uc0NvcmUgPSByZXF1aXJlKCdAYWN0aW9ucy9jb3JlJyk7XG5cbnR5cGUgU2xhY2tNZXNzYWdlQm9keSA9IHtcbiAgdGV4dDogc3RyaW5nO1xufTtcblxudHlwZSBTbGFja0Vycm9yUmVzcG9uc2UgPSB7XG4gIHJlc3BvbnNlOiB7XG4gICAgc3RhdHVzOiBudW1iZXI7XG4gICAgc3RhdHVzVGV4dDogc3RyaW5nO1xuICB9O1xufTtcblxuY29uc3Qgc2xhY2tVcmwgPSBhY3Rpb25zQ29yZS5nZXRJbnB1dCgnc2xhY2tXZWJIb29rJyk7XG5jb25zdCBpbnB1dE1lc3NhZ2UgPSBhY3Rpb25zQ29yZS5nZXRJbnB1dCgnbWVzc2FnZScpO1xuY29uc3QgZGF0YTogU2xhY2tNZXNzYWdlQm9keSA9IHsgdGV4dDogaW5wdXRNZXNzYWdlIH07XG5cbmNvbnN0IHNlbmRUb1NsYWNrID0gYXN5bmMgKHVybDogc3RyaW5nLCBtZXNzYWdlQm9keTogU2xhY2tNZXNzYWdlQm9keSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCh1cmwsIEpTT04uc3RyaW5naWZ5KG1lc3NhZ2VCb2R5KSwge1xuICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgfSk7XG4gICAgYWN0aW9uc0NvcmUuc2V0T3V0cHV0KCdyZXNwb25zZScsIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7XG4gICAgcmV0dXJuIHsgc3RhdHVzQ29kZTogcmVzcG9uc2Uuc3RhdHVzLCBzdGF0dXNNZXNzYWdlOiByZXNwb25zZS5zdGF0dXNUZXh0IH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc3Qgc2xhY2tFcnJvciA9IGVycm9yIGFzIFNsYWNrRXJyb3JSZXNwb25zZTtcbiAgICBhY3Rpb25zQ29yZS5zZXRPdXRwdXQoJ3Jlc3BvbnNlJywgSlNPTi5zdHJpbmdpZnkoc2xhY2tFcnJvcikpO1xuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXNDb2RlOiBzbGFja0Vycm9yLnJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHN0YXR1c01lc3NhZ2U6IHNsYWNrRXJyb3IucmVzcG9uc2Uuc3RhdHVzVGV4dCxcbiAgICB9O1xuICB9XG59O1xuXG4oYXN5bmMgKCkgPT4ge1xuICBhd2FpdCBzZW5kVG9TbGFjayhzbGFja1VybCwgZGF0YSk7XG59KSgpO1xuIl19